// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.MushroomMan = (function(superClass) {
    extend(MushroomMan, superClass);

    function MushroomMan(position) {
      this.position = position;
      this.draw = bind(this.draw, this);
      this.name = "mushroom_man";
      this.img_src = "./stick_figures/enemy_squashed.png";
      this.num_frames = 4;
      MushroomMan.__super__.constructor.call(this, this.name, this.position, this.img_src, this.num_frames);
      this.num_animations = 2;
      this.is_squashed = false;
      this.creature_changes_direction = false;
      this.energy = 1;
    }

    MushroomMan.prototype.squished_sound = new Howl({
      src: ['sounds/squish.mp3'],
      volume: 0.1,
      html5: true
    });

    MushroomMan.prototype.draw = function(world_position) {
      var flipAxis;
      if (this.is_moving_right || this.is_moving_left || this.is_jumping || this.is_trying_to_jump) {
        this.frame_counter++;
      }
      this.frame_index = Math.floor(this.frame_counter / this.frame_factor) % this.num_frames;
      if (this.is_squashed) {
        this.frame_index = this.num_frames + 3;
      }
      if (this.is_moving_right) {
        flipAxis = this.relative_position[0] + this.frame_width / 2;
        this.context.translate(flipAxis, 0);
        this.context.scale(-1, 1);
        this.context.translate(-flipAxis, 0);
      }
      this.context.drawImage(this.image, this.frame_width * this.frame_index, 0, this.frame_width, this.image.height, this.relative_position[0], this.relative_position[1] - this.image.height, this.frame_width, this.image.height);
      if (this.is_on_fire) {
        return window.fire.draw(this.relative_position, this.fire_frame_counter++);
      }
    };

    return MushroomMan;

  })(this.Creature);

}).call(this);
