// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.Plant = (function(superClass) {
    extend(Plant, superClass);

    function Plant(position) {
      this.position = position;
      this.update_position = bind(this.update_position, this);
      this.draw = bind(this.draw, this);
      this.jump = bind(this.jump, this);
      this.name = "plant";
      this.img_src = "./stick_figures/plant.png";
      this.num_frames = 3;
      Plant.__super__.constructor.call(this, this.name, this.position, this.img_src, this.num_frames);
      this.frame_factor = 7;
      setInterval(this.jump, 5000);
      this.gravity_factor = 0.1;
      this.player_speed = 0.0;
      this.creature_changes_direction = false;
      this.disable_collisions = true;
      this.minimum_y_position = this.position[1];
    }

    Plant.prototype.jump = function() {
      return this.fall_speed = -5;
    };

    Plant.prototype.draw = function(world_position) {
      this.frame_counter++;
      return Plant.__super__.draw.call(this, world_position);
    };

    Plant.prototype.update_position = function(world) {
      Plant.__super__.update_position.call(this, world);
      if (this.position[1] < this.minimum_y_position) {
        this.position[1] = this.minimum_y_position;
      }
      return this.calc_relative_position(world.position);
    };

    return Plant;

  })(this.Creature);

}).call(this);
